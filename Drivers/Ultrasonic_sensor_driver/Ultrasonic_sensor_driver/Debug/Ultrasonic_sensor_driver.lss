
Ultrasonic_sensor_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002c8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000031c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000031c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000034c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000388  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b35  00000000  00000000  000003e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068e  00000000  00000000  00000f15  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000464  00000000  00000000  000015a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c4  00000000  00000000  00001a08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c5  00000000  00000000  00001acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000511  00000000  00000000  00001e91  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  000023a2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <main>
  64:	0c 94 62 01 	jmp	0x2c4	; 0x2c4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <lcd_command>:
	}
}

void lcd_clear(void)
{
	lcd_command(0x01);
  6c:	95 b3       	in	r25, 0x15	; 21
  6e:	9f 70       	andi	r25, 0x0F	; 15
  70:	28 2f       	mov	r18, r24
  72:	20 7f       	andi	r18, 0xF0	; 240
  74:	92 2b       	or	r25, r18
  76:	95 bb       	out	0x15, r25	; 21
  78:	95 b3       	in	r25, 0x15	; 21
  7a:	9e 7f       	andi	r25, 0xFE	; 254
  7c:	95 bb       	out	0x15, r25	; 21
  7e:	95 b3       	in	r25, 0x15	; 21
  80:	92 60       	ori	r25, 0x02	; 2
  82:	95 bb       	out	0x15, r25	; 21
  84:	35 e0       	ldi	r19, 0x05	; 5
  86:	3a 95       	dec	r19
  88:	f1 f7       	brne	.-4      	; 0x86 <lcd_command+0x1a>
  8a:	00 00       	nop
  8c:	95 b3       	in	r25, 0x15	; 21
  8e:	9d 7f       	andi	r25, 0xFD	; 253
  90:	95 bb       	out	0x15, r25	; 21
  92:	ef e8       	ldi	r30, 0x8F	; 143
  94:	f1 e0       	ldi	r31, 0x01	; 1
  96:	31 97       	sbiw	r30, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <lcd_command+0x2a>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <lcd_command+0x30>
  9c:	00 00       	nop
  9e:	25 b3       	in	r18, 0x15	; 21
  a0:	f0 e1       	ldi	r31, 0x10	; 16
  a2:	8f 9f       	mul	r24, r31
  a4:	c0 01       	movw	r24, r0
  a6:	11 24       	eor	r1, r1
  a8:	92 2f       	mov	r25, r18
  aa:	9f 70       	andi	r25, 0x0F	; 15
  ac:	89 2b       	or	r24, r25
  ae:	85 bb       	out	0x15, r24	; 21
  b0:	85 b3       	in	r24, 0x15	; 21
  b2:	82 60       	ori	r24, 0x02	; 2
  b4:	85 bb       	out	0x15, r24	; 21
  b6:	35 e0       	ldi	r19, 0x05	; 5
  b8:	3a 95       	dec	r19
  ba:	f1 f7       	brne	.-4      	; 0xb8 <lcd_command+0x4c>
  bc:	00 00       	nop
  be:	85 b3       	in	r24, 0x15	; 21
  c0:	8d 7f       	andi	r24, 0xFD	; 253
  c2:	85 bb       	out	0x15, r24	; 21
  c4:	8f e8       	ldi	r24, 0x8F	; 143
  c6:	91 e0       	ldi	r25, 0x01	; 1
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <lcd_command+0x5c>
  cc:	00 c0       	rjmp	.+0      	; 0xce <lcd_command+0x62>
  ce:	00 00       	nop
  d0:	08 95       	ret

000000d2 <lcd_data>:
  d2:	95 b3       	in	r25, 0x15	; 21
  d4:	9f 70       	andi	r25, 0x0F	; 15
  d6:	28 2f       	mov	r18, r24
  d8:	20 7f       	andi	r18, 0xF0	; 240
  da:	92 2b       	or	r25, r18
  dc:	95 bb       	out	0x15, r25	; 21
  de:	95 b3       	in	r25, 0x15	; 21
  e0:	91 60       	ori	r25, 0x01	; 1
  e2:	95 bb       	out	0x15, r25	; 21
  e4:	95 b3       	in	r25, 0x15	; 21
  e6:	92 60       	ori	r25, 0x02	; 2
  e8:	95 bb       	out	0x15, r25	; 21
  ea:	35 e0       	ldi	r19, 0x05	; 5
  ec:	3a 95       	dec	r19
  ee:	f1 f7       	brne	.-4      	; 0xec <lcd_data+0x1a>
  f0:	00 00       	nop
  f2:	95 b3       	in	r25, 0x15	; 21
  f4:	9d 7f       	andi	r25, 0xFD	; 253
  f6:	95 bb       	out	0x15, r25	; 21
  f8:	ef e8       	ldi	r30, 0x8F	; 143
  fa:	f1 e0       	ldi	r31, 0x01	; 1
  fc:	31 97       	sbiw	r30, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <lcd_data+0x2a>
 100:	00 c0       	rjmp	.+0      	; 0x102 <lcd_data+0x30>
 102:	00 00       	nop
 104:	25 b3       	in	r18, 0x15	; 21
 106:	f0 e1       	ldi	r31, 0x10	; 16
 108:	8f 9f       	mul	r24, r31
 10a:	c0 01       	movw	r24, r0
 10c:	11 24       	eor	r1, r1
 10e:	92 2f       	mov	r25, r18
 110:	9f 70       	andi	r25, 0x0F	; 15
 112:	89 2b       	or	r24, r25
 114:	85 bb       	out	0x15, r24	; 21
 116:	85 b3       	in	r24, 0x15	; 21
 118:	82 60       	ori	r24, 0x02	; 2
 11a:	85 bb       	out	0x15, r24	; 21
 11c:	35 e0       	ldi	r19, 0x05	; 5
 11e:	3a 95       	dec	r19
 120:	f1 f7       	brne	.-4      	; 0x11e <lcd_data+0x4c>
 122:	00 00       	nop
 124:	85 b3       	in	r24, 0x15	; 21
 126:	8d 7f       	andi	r24, 0xFD	; 253
 128:	85 bb       	out	0x15, r24	; 21
 12a:	8f e8       	ldi	r24, 0x8F	; 143
 12c:	91 e0       	ldi	r25, 0x01	; 1
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <lcd_data+0x5c>
 132:	00 c0       	rjmp	.+0      	; 0x134 <lcd_data+0x62>
 134:	00 00       	nop
 136:	08 95       	ret

00000138 <lcd_init>:
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	84 bb       	out	0x14, r24	; 20
 13c:	83 e3       	ldi	r24, 0x33	; 51
 13e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_command>
 142:	82 e3       	ldi	r24, 0x32	; 50
 144:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_command>
 148:	88 e2       	ldi	r24, 0x28	; 40
 14a:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_command>
 14e:	8c e0       	ldi	r24, 0x0C	; 12
 150:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_command>
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_command>
 15a:	8f e3       	ldi	r24, 0x3F	; 63
 15c:	9f e1       	ldi	r25, 0x1F	; 31
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <lcd_init+0x26>
 162:	00 c0       	rjmp	.+0      	; 0x164 <lcd_init+0x2c>
 164:	00 00       	nop
 166:	86 e0       	ldi	r24, 0x06	; 6
 168:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_command>
 16c:	08 95       	ret

0000016e <lcd_gotoxy>:
 16e:	cf 93       	push	r28
 170:	df 93       	push	r29
 172:	00 d0       	rcall	.+0      	; 0x174 <lcd_gotoxy+0x6>
 174:	00 d0       	rcall	.+0      	; 0x176 <lcd_gotoxy+0x8>
 176:	cd b7       	in	r28, 0x3d	; 61
 178:	de b7       	in	r29, 0x3e	; 62
 17a:	90 e8       	ldi	r25, 0x80	; 128
 17c:	99 83       	std	Y+1, r25	; 0x01
 17e:	90 ec       	ldi	r25, 0xC0	; 192
 180:	9a 83       	std	Y+2, r25	; 0x02
 182:	94 e9       	ldi	r25, 0x94	; 148
 184:	9b 83       	std	Y+3, r25	; 0x03
 186:	94 ed       	ldi	r25, 0xD4	; 212
 188:	9c 83       	std	Y+4, r25	; 0x04
 18a:	e8 2f       	mov	r30, r24
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	31 97       	sbiw	r30, 0x01	; 1
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	8c 0f       	add	r24, r28
 196:	9d 1f       	adc	r25, r29
 198:	e8 0f       	add	r30, r24
 19a:	f9 1f       	adc	r31, r25
 19c:	80 81       	ld	r24, Z
 19e:	86 0f       	add	r24, r22
 1a0:	81 50       	subi	r24, 0x01	; 1
 1a2:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_command>
 1a6:	8f e8       	ldi	r24, 0x8F	; 143
 1a8:	91 e0       	ldi	r25, 0x01	; 1
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <lcd_gotoxy+0x3c>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <lcd_gotoxy+0x42>
 1b0:	00 00       	nop
 1b2:	0f 90       	pop	r0
 1b4:	0f 90       	pop	r0
 1b6:	0f 90       	pop	r0
 1b8:	0f 90       	pop	r0
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
 1be:	08 95       	ret

000001c0 <lcd_print>:
 1c0:	0f 93       	push	r16
 1c2:	1f 93       	push	r17
 1c4:	cf 93       	push	r28
 1c6:	8c 01       	movw	r16, r24
 1c8:	c0 e0       	ldi	r28, 0x00	; 0
 1ca:	03 c0       	rjmp	.+6      	; 0x1d2 <lcd_print+0x12>
 1cc:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
 1d0:	cf 5f       	subi	r28, 0xFF	; 255
 1d2:	f8 01       	movw	r30, r16
 1d4:	ec 0f       	add	r30, r28
 1d6:	f1 1d       	adc	r31, r1
 1d8:	80 81       	ld	r24, Z
 1da:	81 11       	cpse	r24, r1
 1dc:	f7 cf       	rjmp	.-18     	; 0x1cc <lcd_print+0xc>
 1de:	cf 91       	pop	r28
 1e0:	1f 91       	pop	r17
 1e2:	0f 91       	pop	r16
 1e4:	08 95       	ret

000001e6 <main>:
#include "LCD_DRIVER.h"

unsigned char ultrasonic_sensor(void);

int main()
{
 1e6:	cf 93       	push	r28
 1e8:	df 93       	push	r29
 1ea:	cd b7       	in	r28, 0x3d	; 61
 1ec:	de b7       	in	r29, 0x3e	; 62
 1ee:	64 97       	sbiw	r28, 0x14	; 20
 1f0:	0f b6       	in	r0, 0x3f	; 63
 1f2:	f8 94       	cli
 1f4:	de bf       	out	0x3e, r29	; 62
 1f6:	0f be       	out	0x3f, r0	; 63
 1f8:	cd bf       	out	0x3d, r28	; 61
	lcd_init();
 1fa:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_init>
	unsigned int value , temp,data[10];
	temp = 0x1f; //write lower value
	value = 0x02; //write high value
	value = (value<<8)|(temp);//number of clocks
	itoa(value,data,10);
 1fe:	4a e0       	ldi	r20, 0x0A	; 10
 200:	50 e0       	ldi	r21, 0x00	; 0
 202:	be 01       	movw	r22, r28
 204:	6f 5f       	subi	r22, 0xFF	; 255
 206:	7f 4f       	sbci	r23, 0xFF	; 255
 208:	8f e1       	ldi	r24, 0x1F	; 31
 20a:	92 e0       	ldi	r25, 0x02	; 2
 20c:	0e 94 22 01 	call	0x244	; 0x244 <itoa>
	lcd_gotoxy(1,1);
 210:	61 e0       	ldi	r22, 0x01	; 1
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	0e 94 b7 00 	call	0x16e	; 0x16e <lcd_gotoxy>
	lcd_print(data);
 218:	ce 01       	movw	r24, r28
 21a:	01 96       	adiw	r24, 0x01	; 1
 21c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_print>
	value = (value * 64)/2; //time taken
	value = 0.034 * value; //distance calculation
	itoa(value,data,10);
 220:	4a e0       	ldi	r20, 0x0A	; 10
 222:	50 e0       	ldi	r21, 0x00	; 0
 224:	be 01       	movw	r22, r28
 226:	6f 5f       	subi	r22, 0xFF	; 255
 228:	7f 4f       	sbci	r23, 0xFF	; 255
 22a:	8e e4       	ldi	r24, 0x4E	; 78
 22c:	92 e0       	ldi	r25, 0x02	; 2
 22e:	0e 94 22 01 	call	0x244	; 0x244 <itoa>
	lcd_gotoxy(2,1);
 232:	61 e0       	ldi	r22, 0x01	; 1
 234:	82 e0       	ldi	r24, 0x02	; 2
 236:	0e 94 b7 00 	call	0x16e	; 0x16e <lcd_gotoxy>
	lcd_print(data);
 23a:	ce 01       	movw	r24, r28
 23c:	01 96       	adiw	r24, 0x01	; 1
 23e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_print>
 242:	ff cf       	rjmp	.-2      	; 0x242 <main+0x5c>

00000244 <itoa>:
 244:	45 32       	cpi	r20, 0x25	; 37
 246:	51 05       	cpc	r21, r1
 248:	20 f4       	brcc	.+8      	; 0x252 <itoa+0xe>
 24a:	42 30       	cpi	r20, 0x02	; 2
 24c:	10 f0       	brcs	.+4      	; 0x252 <itoa+0xe>
 24e:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__itoa_ncheck>
 252:	fb 01       	movw	r30, r22
 254:	10 82       	st	Z, r1
 256:	cb 01       	movw	r24, r22
 258:	08 95       	ret

0000025a <__itoa_ncheck>:
 25a:	bb 27       	eor	r27, r27
 25c:	4a 30       	cpi	r20, 0x0A	; 10
 25e:	31 f4       	brne	.+12     	; 0x26c <__itoa_ncheck+0x12>
 260:	99 23       	and	r25, r25
 262:	22 f4       	brpl	.+8      	; 0x26c <__itoa_ncheck+0x12>
 264:	bd e2       	ldi	r27, 0x2D	; 45
 266:	90 95       	com	r25
 268:	81 95       	neg	r24
 26a:	9f 4f       	sbci	r25, 0xFF	; 255
 26c:	0c 94 39 01 	jmp	0x272	; 0x272 <__utoa_common>

00000270 <__utoa_ncheck>:
 270:	bb 27       	eor	r27, r27

00000272 <__utoa_common>:
 272:	fb 01       	movw	r30, r22
 274:	55 27       	eor	r21, r21
 276:	aa 27       	eor	r26, r26
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	aa 1f       	adc	r26, r26
 27e:	a4 17       	cp	r26, r20
 280:	10 f0       	brcs	.+4      	; 0x286 <__utoa_common+0x14>
 282:	a4 1b       	sub	r26, r20
 284:	83 95       	inc	r24
 286:	50 51       	subi	r21, 0x10	; 16
 288:	b9 f7       	brne	.-18     	; 0x278 <__utoa_common+0x6>
 28a:	a0 5d       	subi	r26, 0xD0	; 208
 28c:	aa 33       	cpi	r26, 0x3A	; 58
 28e:	08 f0       	brcs	.+2      	; 0x292 <__utoa_common+0x20>
 290:	a9 5d       	subi	r26, 0xD9	; 217
 292:	a1 93       	st	Z+, r26
 294:	00 97       	sbiw	r24, 0x00	; 0
 296:	79 f7       	brne	.-34     	; 0x276 <__utoa_common+0x4>
 298:	b1 11       	cpse	r27, r1
 29a:	b1 93       	st	Z+, r27
 29c:	11 92       	st	Z+, r1
 29e:	cb 01       	movw	r24, r22
 2a0:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <strrev>

000002a4 <strrev>:
 2a4:	dc 01       	movw	r26, r24
 2a6:	fc 01       	movw	r30, r24
 2a8:	67 2f       	mov	r22, r23
 2aa:	71 91       	ld	r23, Z+
 2ac:	77 23       	and	r23, r23
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <strrev+0x4>
 2b0:	32 97       	sbiw	r30, 0x02	; 2
 2b2:	04 c0       	rjmp	.+8      	; 0x2bc <strrev+0x18>
 2b4:	7c 91       	ld	r23, X
 2b6:	6d 93       	st	X+, r22
 2b8:	70 83       	st	Z, r23
 2ba:	62 91       	ld	r22, -Z
 2bc:	ae 17       	cp	r26, r30
 2be:	bf 07       	cpc	r27, r31
 2c0:	c8 f3       	brcs	.-14     	; 0x2b4 <strrev+0x10>
 2c2:	08 95       	ret

000002c4 <_exit>:
 2c4:	f8 94       	cli

000002c6 <__stop_program>:
 2c6:	ff cf       	rjmp	.-2      	; 0x2c6 <__stop_program>
