
LCD_DRIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000226  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00000226  0000029a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002b4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000320  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a0e  00000000  00000000  00000370  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000642  00000000  00000000  00000d7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003cc  00000000  00000000  000013c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  0000178c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000038f  00000000  00000000  00001830  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000411  00000000  00000000  00001bbf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001fd0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 37       	cpi	r26, 0x7A	; 122
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 fe 00 	call	0x1fc	; 0x1fc <main>
  7a:	0c 94 11 01 	jmp	0x222	; 0x222 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <lcd_command>:
	
}

void lcd_command(unsigned char cmnd)
{
	lcd_port = ((lcd_port & 0x0f)|(cmnd & 0xf0));
  82:	95 b3       	in	r25, 0x15	; 21
  84:	9f 70       	andi	r25, 0x0F	; 15
  86:	28 2f       	mov	r18, r24
  88:	20 7f       	andi	r18, 0xF0	; 240
  8a:	92 2b       	or	r25, r18
  8c:	95 bb       	out	0x15, r25	; 21
	lcd_port &= ~(1<<lcd_RS);
  8e:	95 b3       	in	r25, 0x15	; 21
  90:	9e 7f       	andi	r25, 0xFE	; 254
  92:	95 bb       	out	0x15, r25	; 21
	lcd_port |= (1<<lcd_EN);
  94:	95 b3       	in	r25, 0x15	; 21
  96:	92 60       	ori	r25, 0x02	; 2
  98:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	35 e0       	ldi	r19, 0x05	; 5
  9c:	3a 95       	dec	r19
  9e:	f1 f7       	brne	.-4      	; 0x9c <lcd_command+0x1a>
  a0:	00 00       	nop
	_delay_us(1);
	lcd_port &= ~(1<<lcd_EN);
  a2:	95 b3       	in	r25, 0x15	; 21
  a4:	9d 7f       	andi	r25, 0xFD	; 253
  a6:	95 bb       	out	0x15, r25	; 21
  a8:	ef e8       	ldi	r30, 0x8F	; 143
  aa:	f1 e0       	ldi	r31, 0x01	; 1
  ac:	31 97       	sbiw	r30, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <lcd_command+0x2a>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <lcd_command+0x30>
  b2:	00 00       	nop
	_delay_us(100);
	
	lcd_port = ((lcd_port & 0x0f)|(cmnd << 4));
  b4:	25 b3       	in	r18, 0x15	; 21
  b6:	f0 e1       	ldi	r31, 0x10	; 16
  b8:	8f 9f       	mul	r24, r31
  ba:	c0 01       	movw	r24, r0
  bc:	11 24       	eor	r1, r1
  be:	92 2f       	mov	r25, r18
  c0:	9f 70       	andi	r25, 0x0F	; 15
  c2:	89 2b       	or	r24, r25
  c4:	85 bb       	out	0x15, r24	; 21
	lcd_port |= (1<<lcd_EN);
  c6:	85 b3       	in	r24, 0x15	; 21
  c8:	82 60       	ori	r24, 0x02	; 2
  ca:	85 bb       	out	0x15, r24	; 21
  cc:	35 e0       	ldi	r19, 0x05	; 5
  ce:	3a 95       	dec	r19
  d0:	f1 f7       	brne	.-4      	; 0xce <lcd_command+0x4c>
  d2:	00 00       	nop
	_delay_us(1);
	lcd_port &= ~(1<<lcd_EN);
  d4:	85 b3       	in	r24, 0x15	; 21
  d6:	8d 7f       	andi	r24, 0xFD	; 253
  d8:	85 bb       	out	0x15, r24	; 21
  da:	8f e8       	ldi	r24, 0x8F	; 143
  dc:	91 e0       	ldi	r25, 0x01	; 1
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <lcd_command+0x5c>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <lcd_command+0x62>
  e4:	00 00       	nop
  e6:	08 95       	ret

000000e8 <lcd_data>:
	_delay_us(100);
}

void lcd_data(unsigned char data)
{
	lcd_port = ((lcd_port & 0x0f)|(data & 0xf0));
  e8:	95 b3       	in	r25, 0x15	; 21
  ea:	9f 70       	andi	r25, 0x0F	; 15
  ec:	28 2f       	mov	r18, r24
  ee:	20 7f       	andi	r18, 0xF0	; 240
  f0:	92 2b       	or	r25, r18
  f2:	95 bb       	out	0x15, r25	; 21
	lcd_port |= (1<<lcd_RS);
  f4:	95 b3       	in	r25, 0x15	; 21
  f6:	91 60       	ori	r25, 0x01	; 1
  f8:	95 bb       	out	0x15, r25	; 21
	lcd_port |= (1<<lcd_EN);
  fa:	95 b3       	in	r25, 0x15	; 21
  fc:	92 60       	ori	r25, 0x02	; 2
  fe:	95 bb       	out	0x15, r25	; 21
 100:	35 e0       	ldi	r19, 0x05	; 5
 102:	3a 95       	dec	r19
 104:	f1 f7       	brne	.-4      	; 0x102 <lcd_data+0x1a>
 106:	00 00       	nop
	_delay_us(1);
	lcd_port &= ~(1<<lcd_EN);
 108:	95 b3       	in	r25, 0x15	; 21
 10a:	9d 7f       	andi	r25, 0xFD	; 253
 10c:	95 bb       	out	0x15, r25	; 21
 10e:	ef e8       	ldi	r30, 0x8F	; 143
 110:	f1 e0       	ldi	r31, 0x01	; 1
 112:	31 97       	sbiw	r30, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <lcd_data+0x2a>
 116:	00 c0       	rjmp	.+0      	; 0x118 <lcd_data+0x30>
 118:	00 00       	nop
	_delay_us(100);
	
	lcd_port = ((lcd_port & 0x0f)|(data << 4));
 11a:	25 b3       	in	r18, 0x15	; 21
 11c:	f0 e1       	ldi	r31, 0x10	; 16
 11e:	8f 9f       	mul	r24, r31
 120:	c0 01       	movw	r24, r0
 122:	11 24       	eor	r1, r1
 124:	92 2f       	mov	r25, r18
 126:	9f 70       	andi	r25, 0x0F	; 15
 128:	89 2b       	or	r24, r25
 12a:	85 bb       	out	0x15, r24	; 21
	lcd_port |= (1<<lcd_EN);
 12c:	85 b3       	in	r24, 0x15	; 21
 12e:	82 60       	ori	r24, 0x02	; 2
 130:	85 bb       	out	0x15, r24	; 21
 132:	35 e0       	ldi	r19, 0x05	; 5
 134:	3a 95       	dec	r19
 136:	f1 f7       	brne	.-4      	; 0x134 <lcd_data+0x4c>
 138:	00 00       	nop
	_delay_us(1);
	lcd_port &= ~(1<<lcd_EN);
 13a:	85 b3       	in	r24, 0x15	; 21
 13c:	8d 7f       	andi	r24, 0xFD	; 253
 13e:	85 bb       	out	0x15, r24	; 21
 140:	8f e8       	ldi	r24, 0x8F	; 143
 142:	91 e0       	ldi	r25, 0x01	; 1
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <lcd_data+0x5c>
 148:	00 c0       	rjmp	.+0      	; 0x14a <lcd_data+0x62>
 14a:	00 00       	nop
 14c:	08 95       	ret

0000014e <lcd_init>:
	_delay_us(100);
}

void lcd_init(void)
{
	lcd_DDR = 0xff;
 14e:	8f ef       	ldi	r24, 0xFF	; 255
 150:	84 bb       	out	0x14, r24	; 20
	
	lcd_command(0x33); //delay for lcd
 152:	83 e3       	ldi	r24, 0x33	; 51
 154:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	lcd_command(0x32); //delay for lcd
 158:	82 e3       	ldi	r24, 0x32	; 50
 15a:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	lcd_command(0x28); //set 4bit mode , number of lines 2 and 5x7 dots representation
 15e:	88 e2       	ldi	r24, 0x28	; 40
 160:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	lcd_command(0x0c); //set lcd on and cursor on
 164:	8c e0       	ldi	r24, 0x0C	; 12
 166:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	lcd_command(0x01); //clear lcd
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
 170:	8f e3       	ldi	r24, 0x3F	; 63
 172:	9f e1       	ldi	r25, 0x1F	; 31
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <lcd_init+0x26>
 178:	00 c0       	rjmp	.+0      	; 0x17a <lcd_init+0x2c>
 17a:	00 00       	nop
	_delay_us(2000);
	lcd_command(0x06); //shift cursor right
 17c:	86 e0       	ldi	r24, 0x06	; 6
 17e:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
 182:	08 95       	ret

00000184 <lcd_gotoxy>:
}

void lcd_gotoxy(unsigned char x , unsigned char y)
{
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	00 d0       	rcall	.+0      	; 0x18a <lcd_gotoxy+0x6>
 18a:	00 d0       	rcall	.+0      	; 0x18c <lcd_gotoxy+0x8>
 18c:	cd b7       	in	r28, 0x3d	; 61
 18e:	de b7       	in	r29, 0x3e	; 62
	unsigned char First_addr[] = { 0x80 , 0xc0 , 0x94 , 0xd4 };
 190:	90 e8       	ldi	r25, 0x80	; 128
 192:	99 83       	std	Y+1, r25	; 0x01
 194:	90 ec       	ldi	r25, 0xC0	; 192
 196:	9a 83       	std	Y+2, r25	; 0x02
 198:	94 e9       	ldi	r25, 0x94	; 148
 19a:	9b 83       	std	Y+3, r25	; 0x03
 19c:	94 ed       	ldi	r25, 0xD4	; 212
 19e:	9c 83       	std	Y+4, r25	; 0x04
	lcd_command(First_addr[x-1] + y-1);
 1a0:	e8 2f       	mov	r30, r24
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	31 97       	sbiw	r30, 0x01	; 1
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	8c 0f       	add	r24, r28
 1ac:	9d 1f       	adc	r25, r29
 1ae:	e8 0f       	add	r30, r24
 1b0:	f9 1f       	adc	r31, r25
 1b2:	80 81       	ld	r24, Z
 1b4:	86 0f       	add	r24, r22
 1b6:	81 50       	subi	r24, 0x01	; 1
 1b8:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
 1bc:	8f e8       	ldi	r24, 0x8F	; 143
 1be:	91 e0       	ldi	r25, 0x01	; 1
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <lcd_gotoxy+0x3c>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <lcd_gotoxy+0x42>
 1c6:	00 00       	nop
	_delay_us(100);
}
 1c8:	0f 90       	pop	r0
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	df 91       	pop	r29
 1d2:	cf 91       	pop	r28
 1d4:	08 95       	ret

000001d6 <lcd_print>:

void lcd_print(unsigned char *str)
{
 1d6:	0f 93       	push	r16
 1d8:	1f 93       	push	r17
 1da:	cf 93       	push	r28
 1dc:	8c 01       	movw	r16, r24
	unsigned char i;
	for(i=0;str[i] != 0;i++)
 1de:	c0 e0       	ldi	r28, 0x00	; 0
 1e0:	03 c0       	rjmp	.+6      	; 0x1e8 <lcd_print+0x12>
	{
		lcd_data(str[i]);
 1e2:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_data>
}

void lcd_print(unsigned char *str)
{
	unsigned char i;
	for(i=0;str[i] != 0;i++)
 1e6:	cf 5f       	subi	r28, 0xFF	; 255
 1e8:	f8 01       	movw	r30, r16
 1ea:	ec 0f       	add	r30, r28
 1ec:	f1 1d       	adc	r31, r1
 1ee:	80 81       	ld	r24, Z
 1f0:	81 11       	cpse	r24, r1
 1f2:	f7 cf       	rjmp	.-18     	; 0x1e2 <lcd_print+0xc>
	{
		lcd_data(str[i]);
	}
}
 1f4:	cf 91       	pop	r28
 1f6:	1f 91       	pop	r17
 1f8:	0f 91       	pop	r16
 1fa:	08 95       	ret

000001fc <main>:
void lcd_print(unsigned char*);
void lcd_clear(void);

int main()
{
	lcd_init();
 1fc:	0e 94 a7 00 	call	0x14e	; 0x14e <lcd_init>
	lcd_gotoxy(1,1);
 200:	61 e0       	ldi	r22, 0x01	; 1
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_gotoxy>
	lcd_print("Hello Bhaya");
 208:	80 e6       	ldi	r24, 0x60	; 96
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_print>
	lcd_gotoxy(2,1);
 210:	61 e0       	ldi	r22, 0x01	; 1
 212:	82 e0       	ldi	r24, 0x02	; 2
 214:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_gotoxy>
	lcd_print("kya haal hai");
 218:	8c e6       	ldi	r24, 0x6C	; 108
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_print>
 220:	ff cf       	rjmp	.-2      	; 0x220 <main+0x24>

00000222 <_exit>:
 222:	f8 94       	cli

00000224 <__stop_program>:
 224:	ff cf       	rjmp	.-2      	; 0x224 <__stop_program>
